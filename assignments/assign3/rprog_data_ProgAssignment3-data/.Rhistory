library(swirl)
x < 1:4
0
x <- 1:4
y <- 2:3
x + y
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
myData <- sample(c(y, z), 100)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo =11, bar =2, norf =NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2)<- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
quit()
library(datasets)
data(iris)
?iris
iris
str(iris)
class(iris)
apply(iris[iris$Species = "virginica"], 2, mean)
iris[iris$Species = "virginica"]
iris[Species = "virginica"]
names(iris)
iris$Species
?subset
View(iris)
apply(subset(iris, Species = "virginica", select = c(Sepal.Length)), 2, mean )
subset(iris, Species = "virginica")
x <- subset(iris, Species = "virginica")
x
mean(x$Sepal.Length)
names(iris)
colMeans(iris)
iris
apply(iris[, 1:4], 2, mean)
mean(iris$Sepal.Length)
data(mtcars)
names(mtcars)
View(mtcars)
?tapply
class(mtcars)
as.factor(mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
mtcars$mpg
mtcars$mpg[cyl = 4]
mtcars$mpg[mtcars$cyl = 4]
mtcars$mpg[cyl = 4]
mtcars[cyl = 4]
mtcars[mtcars$cyl = 4]
$[]
?[]
?[]
mtcars$mpg
mtcars$mpg[cyl = 4]
?split
split(mtcars, cyl)
split(mtcars, mtcars$cyl)
?data.frame
mtcars[cyl = 4]
mtcars$mpg[cyl = 4]
mtcars$mpg[, cyl = 4]
x <- mtcars$cyl = 4
mtcars$mpg[cyl == 4]
mtcars$mpg[mtcars$cyl == 4]
apply(mtcars$mpg[mtcars$cyl == 4], 2, mean)
mean(mtcars$mpg[cyl == 4])
mean(mtcars$mpg[mtcars$cyl == 4])
?abs
mean(mtcars$mpg[mtcars$cyl == 6])
mean(mtcars$mpg[mtcars$cyl == 8])
mean(mtcars$hp[mtcars$cyl == 8])
mean(mtcars$hp[mtcars$cyl == 4])
(mean(mtcars$hp[mtcars$cyl == 4]) - mean(mtcars$hp[mtcars$cyl == 8])
.
mean(mtcars$hp[mtcars$cyl == 4]) - mean(mtcars$hp[mtcars$cyl == 8]
.
2 -3
mean(mtcars$hp[mtcars$cyl == 4]) - mean(mtcars$hp[mtcars$cyl == 8])
abs(mean(mtcars$hp[mtcars$cyl == 4]) - mean(mtcars$hp[mtcars$cyl == 8]))
mean(iris$Sepal.Lenth[iris$Species == "virginica"])
mean(iris$Sepal.Length[iris$Species == "virginica"])
iris$Sepal.Length[iris$Species == "virginica"]
subset(iris, Species = "virginica", select = c(Sepal.Length))
subset(iris, Species = "virginica")
x <- subset(iris, Species = "virginica")
x
?subset
x <- subset(iris, iris$Species = "virginica")
x <- subset(iris, iris$Species == "virginica")
x
mean(x$Sepal.Length)
apply(subset(iris, Species == "virginica", select = c(Sepal.Length)), 2, mean )
abs(mean(mtcars$hp[mtcars$cyl == 4]) - mean(mtcars$hp[mtcars$cyl == 8]))
debug(ls)
ls
# what R code returns a vector of the means of the variables 'Sepal.Length',
debug(ls)
ls()
?
.
q
ls()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector()
cachemean()
cachemean(mean)
cachemean(x)
class(makeVector)
class(makeVector())
cachemean(makeVector)
cachemean(makeVector())
z <- c(1, 2, 3, 4, 5)
cachemean(makeVector(z))
z <- c(3, 3, 3)
cachemean(makeVector(z))
z <- c(3, 3, 5)
cachemean(makeVector(z))
m
source('~/Documents/Coursera/datasci/rprog/assignments/ProgrammingAssignment2/cachematrix.R')
x <- matrix(rnorm(16), nrow = 4)
x
cx <- makeCacheMatrix(x)
source('~/Documents/Coursera/datasci/rprog/assignments/ProgrammingAssignment2/cachematrix.R')
cx <- makeCacheMatrix(x)
cx
cx$get()
cx$get()
cacheSolve(cx)
cacheSolve(cx)
x <- matrix(rnorm(10), nrow = 4)
x <- matrix(rnorm(12), nrow = 4)
x
x <- matrix(rnorm(12), nrow = 3)
x
x <- matrix(rnorm(9), nrow = 3)
x
cx <- makeCacheMatrix(x)
cx$get()
cacheSolve(cx)
cacheSolve(cx)
source('~/Documents/Coursera/datasci/rprog/assignments/ProgrammingAssignment2/cachematrix.R')
?data.frame
x
setwd("~/Documents/Coursera/datasci/rprog/assignments/assign3/rprog_data_ProgAssignment3-data")
x <- <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
x <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
x[,11]<- as.numeric(x[,11])
x[,17]<- as.numeric(x[,17])
x[,23]<- as.numeric(x[,23])
s <- subset(x, select = c("Hospital.Name","State",
"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack" ))
View(s)
s <- s[order(s[ , 2], s[ , 1]), ]
r <- transform(s, rank =
ave(s[ , 3], s[, 2],
FUN = function(x) rank(x, ties.method = "first")))
r[unique(r$State)]
r$State[unique(r$State)]
View(r)
unique(r$State)
y <- cbind(unique(r$State))
y
y <- cbind(unique(r$State) , r$Hospital.Name[rank == 20])
y <- cbind(unique(r$State) , r$Hospital.Name[r$rank == 20])
r$Hospital.Name[rank == 20]
r$Hospital.Name[r$rank == 20]
?merge
class(r)
class(y)
as.dataframe(y)
?as.data.frame
as.data.frame(y)
View(y)
y <- cbind(unique(r$State))
class(y)
View(y)
y <- sort(y)
y
class(y)
y <- as.data.frame(y)
View(y)
?by
?merge
r <- r[r$rank == 20]
r <- r[rank == 20]
r <- r[r$rank == 20]
r <- r[r$rank == 20, ]
names(y)
merge(y, r, by.x = "y", by.y = "State", all.x = TRUE, all.y = FALSE)
merge(y, r, by.x = "y", by.y = "State", all.x = TRUE, all.y = FALSE)[, c("Hospital.Name","State")]
merge(y, r, by.x = "y", by.y = "State", all.x = TRUE, all.y = FALSE)[, c("Hospital.Name","y")]
t <- merge(y, r, by.x = "y", by.y = "State", all.x = TRUE, all.y = FALSE)[, c("Hospital.Name","y")]
View(t)
y <- cbind.data.frame(unique(r$State))
class(y)
View(y)
names(y) <- "state"
View(y)
source('~/Documents/Coursera/datasci/rprog/assignments/assign3/rprog_data_ProgAssignment3-data/rankall.R')
source('~/Documents/Coursera/datasci/rprog/assignments/assign3/rprog_data_ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Documents/Coursera/datasci/rprog/assignments/assign3/rprog_data_ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
source('~/Documents/Coursera/datasci/rprog/assignments/assign3/rprog_data_ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Documents/Coursera/datasci/rprog/assignments/assign3/rprog_data_ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 54)
source('~/Documents/Coursera/datasci/rprog/assignments/assign3/rprog_data_ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 54)
source('~/Documents/Coursera/datasci/rprog/assignments/assign3/rprog_data_ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
t
names(t) <- c("Hospital", "state")
t
source('~/Documents/Coursera/datasci/rprog/assignments/assign3/rprog_data_ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
n <- 20
n
r
n <- 14.7
r[rank == n, ]
r[r$rank == n, ]
n <- 20
r[r$rank == n, ]
?rank
max(r$rank, na.rm = TRUE)
source('~/Documents/Coursera/datasci/rprog/assignments/assign3/rprog_data_ProgAssignment3-data/rankall.R')
source('~/Documents/Coursera/datasci/rprog/assignments/assign3/rprog_data_ProgAssignment3-data/rankall.R')
source('~/Documents/Coursera/datasci/rprog/assignments/assign3/rprog_data_ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
source('~/Documents/Coursera/datasci/rprog/assignments/assign3/rprog_data_ProgAssignment3-data/rankall.R')
.
submit()
rankall("heart attack", 4)
submit()
submit()
submit()
head(rankall("heart attack", 20), 10)
source('~/Documents/Coursera/datasci/rprog/assignments/assign3/rprog_data_ProgAssignment3-data/rankall.R')
submit()
submit()
submit()
source('~/Documents/Coursera/datasci/rprog/assignments/assign3/rprog_data_ProgAssignment3-data/rankall.R')

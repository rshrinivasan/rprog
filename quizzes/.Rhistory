.
ggplot(aes(x = subset(age_with_months, y = friend_count), data = subset(pf, age < 71)) +
geom_line()
ggplot(aes(x = subset(age_with_months, y = friend_count), data = subset(pf, age < 71)) +
geom_line()
ggplot(aes(x = subset(age_with_months, y = friend_count), data = subset(pf, age < 71)) +
geom_line()
ggplot(aes(x = subset(age_with_months, y = friend_count),
data = subset(pf_by_age_month, age_with_months < 71)) +
geom_line()
ggplot(aes(x = subset(age_with_months, y = friend_count),
data = subset(pf_by_age_month, age_with_months < 71) +
geom_line()
ggplot(aes(x = age_with_months, y = friend_count),
data = subset(pf_by_age_month, age_with_months < 71)) +
geom_line()
ggplot(aes(x = age_with_months, y = friend_count),
data = subset(pf_by_age_month, age_with_months < 71)) +
geom_line()
ggplot(aes(x = age_with_months, y = friend_count),
data = subset(pf.fc_by_age_month, age_with_months < 71)) +
geom_line()
ggplot(aes(x = age_with_months, y = friend_count),
data = subset(pf.fc_by_age_months, age_with_months < 71)) +
geom_line()
ggplot(aes(x = age_with_months, y = friend_count_mean),
data = subset(pf.fc_by_age_months, age_with_months < 71)) +
geom_line()
library(ggplot2)
ggplot(aes(x = age, y = friend_count_mean), data =pf) +
geom_line()
ggplot(aes(x = age, y = friend_count_mean), data =pf.fc_by_age) +
geom_line()
ggplot(aes(x = age, y = friend_count_mean),
data =subset(pf.fc_by_age, age < 71)) +
geom_line()
p1 <- ggplot(aes(x = age, y = friend_count_mean),
data =subset(pf.fc_by_age, age < 71)) +
geom_line() +
geom_smooth()
p2 <- ggplot(aes(x = age_with_months, y = friend_count_mean),
data = subset(pf.fc_by_age_months, age_with_months < 71)) +
geom_line() +
geom_smooth()
p3 <- ggplot(aes(x = round(age / 5) * 5, y = friend_count),
data = subset(pf, age < 71)) +
geom_line(stat = 'summary', fun.y = mean)
library(gridExtra)
grid.arrange(p1, p2, p3, ncol = 1)
library(ggplot2)
data(diamonds)
names(diamonds)
summary(diamonds$x)
str(diamonds)
ggplot(aes(x = x, y = price), data = diamonds) +
geom_points()
ggplot(aes(x = x, y = price), data = diamonds) +
geom_point()
by(diamond$x, diamond$price)
by(diamonds$x, diamonds$price)
by(diamonds$x, diamonds$price, fun = 'summary')
??by
by(diamonds$x, diamonds$price, 'summary')
by(diamonds$x, diamonds$price,summary)
by(diamonds$price, diamonds$x,summary)
library(ggplot2)
data(diamonds)
#box plot price vs. x
ggplot(aes(x = x, y = price), data = diamonds) +
geom_point()
library(alr3)
with(diamonds, cor.test(x, price))
with(diamonds, cor.test(x, price))
with(diamonds, cor.test(y, price))
with(diamonds, cor.test(z. price))
with(diamonds, cor.test(x, price))
with(diamonds, cor.test(y, price))
with(diamonds, cor.test(z, price))
ggplot(aes(x = depth, y =price), data = diamonds) +
geom_plot()
ggplot(aes(x = depth, y =price), data = diamonds) +
geom_point()
with(diamonds, cor.test(depth, price))
summary(diamonds$depth)
ggplot(aes(x = depth, y =price), data = diamonds) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(43, 80, 2))
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_plot()
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point()
summary(diamonds$carat)
??summary
quantile(diamonds$carat)
??quantile
quantile(diamonds$carat, seq(0, 100, 1))
quantile(diamonds$carat, seq(0, 1, .1))
quantile(diamonds$carat, 0.99)
quantile(diamonds$price, 0.99)
ggplot(aes(x = carat, y = price),
data = subset(diamonds, carat < 2.18 && price < 17378.22) +
geom_point()
ggplot(aes(x = carat, y = price),
data = subset(diamonds, carat < 2.18 && price < 17378.22)) +
geom_point()
ggplot(aes(x = carat, y = price),
data = subset(diamonds, carat < 2.18 & price < 17378.22)) +
geom_point()
ggplot(aes(x = carat, y = price),
data = subset(diamonds, carat < quantile(diamonds$carat,0.99) & price < quantile(diamonds$price, 0.99))) +
geom_point()
volume = diamonds$x * diamonds$y * diamonds$z
ggplot(aes(x = volume, y = price), data = diamonds) +
geom_point()
library(ggplot2)
volume = diamonds$x * diamonds$y * diamonds$z
ggplot(aes(x = volume, y = price), data = diamonds) +
geom_point()
summary(volume)
with(diamonds, cor.test(volume, price))
voldiamonds <- subset(diamonds, volume > 0 and volume < 800)
voldiamonds <- subset(diamonds, volume > 0 & volume < 800)
summary(voldiamonds)
with(voldiamonds, cor.test(volume, price))
diamonds.volume = diamonds$x * diamonds$y * diamonds$z
voldiamonds <- subset(diamonds, volume > 0 & volume < 800)
with(voldiamonds, cor.test(volume, price))
diamonds.volume = diamonds$x * diamonds$y * diamonds$z
voldiamonds <- subset(diamonds, diamonds.volume > 0 & diamonds.volume < 800)
with(voldiamonds, cor.test(volume, price))
names(voldiamonds)
names(diamonds)
diamonds.volume <- diamonds$x * diamonds$y * diamonds$z
voldiamonds <- subset(diamonds, diamonds.volume > 0 & diamonds.volume < 800)
with(voldiamonds, cor.test(volume, price))
names(diamonds)
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
voldiamonds <- subset(diamonds, diamonds.volume > 0 & diamonds.volume < 800)
with(voldiamonds, cor.test(volume, price))
ggplot(aes(x = volume, y = price), data = voldiamonds) +
geom_point()
ggplot(aes(x = volume, y = price), data = voldiamonds) +
geom_point(alpha = 1/100)
ggplot(aes(x = volume, y = price), data = voldiamonds) +
geom_point(alpha = 1/100) +
geom_smooth(method = 'lm')
library(dplyr)
View(diamonds)
diamondsByClarity <- diamonds %.%
group_by(clarity) %.%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n()) %.%
arrange(clarity)
summary(diamondsByClarity)
View(diamondsByClarity)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(ggplot)
library(ggplot2)
diamonds_by_color
diamonds_mp_by_color
ggplot(aes(x = color, y= mean_price), data = diamonds_mp_by_color) +
geom_bar()
p2 <- ggplot(aes(x = clarity, y = mean_price),
data = diamonds_by_clarity) +
geom_bar()
p1 <- ggplot(aes(x = color, y= mean_price), data = diamonds_mp_by_color) +
geom_bar()
p2 <- ggplot(aes(x = clarity, y = mean_price),
data = diamonds_by_clarity) +
geom_bar()
library(gridExtra)
grid.arrange(p1,p2)
p1 <- ggplot(aes(x = color, y= mean_price), data = diamonds_mp_by_color) +
geom_bar()
p2 <- ggplot(aes(x = clarity, y = mean_price),
data = diamonds_mp_by_clarity) +
geom_bar()
library(gridExtra)
grid.arrange(p1,p2)
qt(0.025, df = 25)
library(dplyr)
pf.fc_by_age_gender <- pf %.%
group_by(age,gender) %.%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %.%
arrange(age, gender)
View(pf.fc_by_age_gender)
pf.fc_by_age_gender <- pf %.%
filter(!is.na(gender)) %.%
group_by(age,gender) %.%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %.%
ungroup() %.%
arrange()
pf.fc_by_age_gender <- pf %.%
filter(!is.na(gender)) %.%
group_by(age,gender) %.%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %.%
ungroup() %.%
arrange(age)
View(pf.fc_by_age_gender)
library(DAAG)
132.57/480.25
summary(pf.fc_by_age_gender$gender)
ggplot(aes(x = age, y = medianfriend_count),
data = pf.fc_by_age_gender)) +
geom_line(aes(color = gender))
library(ggplot2)
ggplot(aes(x = age, y = medianfriend_count),
data = pf.fc_by_age_gender)) +
geom_line(aes(color = gender))
ggplot(aes(x = age, y = medianfriend_count),
data = pf.fc_by_age_gender) +
geom_line(aes(color = gender))
ggplot(aes(x = age, y = median_friend_count),
data = pf.fc_by_age_gender) +
geom_line(aes(color = gender))
install.packages('reshape2')
library(reshape2)
pf.fc_by_age_gender.wid <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = 'median_friend_count)
pf.fc_by_age_gender.wid <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = 'median_friend_count')
pf.fc_by_age_gender.wid <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = 'median_friend_count')
View(pf.fc_by_age_months)
View(pf.fc_by_age_gender.wid)
ggplot(aes(x = age, y = female / male),
data = pf.fc_by_age_gender.wid) +
geom_line(aes(color = gender))
ggplot(aes(x = age, y = female / male),
data = pf.fc_by_age_gender.wid) +
geom_line()
??geom_hline
ggplot(aes(x = age, y = female / male),
data = pf.fc_by_age_gender.wid) +
geom_line() +
geom_hline(aes(yintercept = 1))
ggplot(aes(x = age, y = female / male),
data = pf.fc_by_age_gender.wid) +
geom_line() +
geom_hline(aes(yintercept = 1, linetype = 2, color = orange))
ggplot(aes(x = age, y = female / male),
data = pf.fc_by_age_gender.wid) +
geom_line() +
geom_hline(aes(yintercept = 1, color = orange))
ggplot(aes(x = age, y = female / male),
data = pf.fc_by_age_gender.wid) +
geom_line() +
geom_hline(aes(yintercept = 1, color = 'orange'))
ggplot(aes(x = age, y = female / male),
data = pf.fc_by_age_gender.wid) +
geom_line() +
geom_hline(aes(yintercept = 1, color = 'orange', linetype=2))
ggplot(aes(x = age, y = female / male),
data = pf.fc_by_age_gender.wid) +
geom_line() +
geom_hline(aes(yintercept = 1, color = 'orange'), linetype=2)
names(pf)
head(pf)
pf$year_joined <- ceiling(2014 - pf$tenure / 365)
head(pf$year_joined)
head(pf$tenure)
head(pf$tenure / 365)
head(2014 - pf$tenure / 365)
pf$year_joined <- floor(2014 - pf$tenure / 365)
head(pf$year_joined)
summary(pf$year_joined)
table(pf$year_joined)
?cut
table(cut(pf$year_joined, 2))
table(cut(pf$year_joined, (2004, 2009])))
table(cut(pf$year_joined, c(2004, 2009, 2011, 2012, 2014)))
pf$year_joined.bucket <-cut(pf$year_joined,c(2004, 2009, 2011, 2012, 2014))
head(pf$year_joined.bucket)
pf$year_joined.bucket <-cut(pf$year_joined,c(2004, 2009, 2011, 2012, 2014))
head(pf$year_joined.bucket)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(pf.year_joined.bucket))) +
geom_line(aes(color = pf$year_joined.bucket), stat = 'summary', fun.y = median)
library(ggplot2)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(pf.year_joined.bucket))) +
geom_line(aes(color = pf$year_joined.bucket), stat = 'summary', fun.y = median)
pf$year_joined.bucket <-cut(pf$year_joined,c(2004, 2009, 2011, 2012, 2014))
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(pf.year_joined.bucket))) +
geom_line(aes(color = pf$year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(pf$year_joined.bucket))) +
geom_line(aes(color = pf$year_joined.bucket), stat = 'summary', fun.y = median)
names(pf)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, probs = .1,
linetype = 2, color = 'blue')
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = mean, probs = .1,
linetype = 2, color = 'blue')
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = mean,
linetype = 2, color = 'blue')
with(subset(pg, tenure >= 1), summary(friend_count / tenure))
with(subset(pf, tenure >= 1), summary(friend_count / tenure))
a <- available.packages()
summary(a)
names(a)
head(a)
install.packages("slidify")
## Uses
install.packages('KernSmooth')
library(KernSmooth)
library(dplyr)
pf.fc_by_age_gender <- pf %.%
filter(!is.na(gender)) %.%
group_by(age,gender) %.%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %.%
ungroup() %.%
arrange(age)
ggplot(aes(x = age, y = median_friend_count),
data = pf.fc_by_age_gender) +
geom_line(aes(color = gender))
library(ggplot2)
library(dplyr)
pf.fc_by_age_gender <- pf %.%
filter(!is.na(gender)) %.%
group_by(age,gender) %.%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %.%
ungroup() %.%
arrange(age)
ggplot(aes(x = age, y = median_friend_count),
data = pf.fc_by_age_gender) +
geom_line(aes(color = gender))
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 30 * round(tenure / 30), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 90 * round(tenure / 90), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
??geom_smooth
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_smooth(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
yo <- read.csv('yogurt.csv')
names(yo)
summary(yo)
View(yo)
str(yo)
yo$id <- factor(yo$id)
str(yo)
qplot(price, data = yo, geom = "histogram")
length(unique(yo$price))
unique(yo$price)
length(unique(yo$price))
table(yo$price)
??transform
names(yo)
tst <- transform(yo, tst = strawberry + blueberry + pina.colada + plain + mixed.berry)
tst
str(tst)
yo$all.purchases <- transform(yo, all.purchases = strawberry + blueberry + pina.colada + plain + mixed.berry)
View(yo)
yo <- transform(yo, all.purchases = strawberry + blueberry + pina.colada + plain + mixed.berry)
View(yo)
ggplot(aes(x = time, y = price))
ggplot(aes(x = time, y = price), data = yo)
ggplot(aes(x = time, y = price), data = yo) +
geom_point()
ggplot(aes(x = time, y = price), data = yo) +
geom_jitter(alpha = 1/4, shape = 21)
set.seed(4230)
sample.ids <- sample(levels(yo$id), 16)
sample.ids
library(ggplot2)
ggplot(aes(x = time, y = price),
date = subset(yo, id %in% sample.ids)) +
facet_wrap(~ id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 1)
str(y0)
str(y0)
str(yo)
ggplot(aes(x = time, y = price),
data = subset(yo, id %in% sample.ids)) +
facet_wrap(~ id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 1)
set.seed(2115)
sample.ids <- sample(levels(yo$id), 16)
sample.ids
ggplot(aes(x = time, y = price),
data = subset(yo, id %in% sample.ids)) +
facet_wrap(~ id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 1)
install.packages(GGolly)
install.packages(GGally)
install.packages('GGally')
library(GGally)
0.95* .05
0.95 * .03
.0475 + .0285
.0475/0.076
qf(0.95, 3, 323)
y <- rnorm(1000)
z <- rep(NA, 1000)
myData <- sample(c(y, z), 100)
myNA <- is.na(myData)
table(myNA)
sum(myNA)
x
x <- list(1, "a", T, 1 +4i)
x
x[[3]]
class(x[[3]])
names(x)
x <- c("a", "b", "c", "d", "c")
x
x[x > "a"]
class(x[x > "a"])
paste("100",".csv")
paste("100",".csv",sep="")
add2 <- function(x, y){
x + y
}
add2(3,5)
add2(3)
above <- function(x, aboveNum){
x[x > aboveNum]
}
x <- 1:20
above(x, 10)
above(x, 11)
above <- function(x, aboveNum = 10){
x[x > aboveNum]
}
above(x)
colmeans <- function(x, rmNA = TRUE){
for(i in 1:ncol(x)){
means <- mean(x[, i], na.rm = rmNA)
}
means
}
quiz1 <- read.csv('hw1_data.csv')
setwd("~/Documents/Coursera/datasci/rprog/quizzes")
quiz1 <- read.csv('hw1_data.csv')
str(quiz1)
colmeans(quiz1)
colmeans <- function(x, rmNA = TRUE){
for(i in 1:ncol(x)){
means[i] <- mean(x[, i], na.rm = rmNA)
}
means
}
colmeans(quiz1)
colmeans <- function(x, rmNA = TRUE){
means <- numeric(ncol(x))
for(i in 1:ncol(x)){
means[i] <- mean(x[, i], na.rm = rmNA)
}
means
}
colmeans(quiz1)
